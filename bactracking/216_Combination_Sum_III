class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
        int arr[]={1,2,3,4,5,6,7,8,9};
        List<Integer> list=new ArrayList<>();
        List<List<Integer>> ans=new ArrayList<>();
        comb(k,n,arr,list,ans,0);
        return ans;

        
    }
    public static void comb(int k, int n, int[] arr, List<Integer> list, List<List<Integer>> ans, int indx) {
        if (n == 0 && list.size() == k) {
            ans.add(new ArrayList<>(list));
            return;
        }
        if (list.size() > k || n < 0) { 
            return;
        }
        for (int i = indx; i < arr.length; i++) {
            if (n >= arr[i]) {
                list.add(arr[i]);
                comb(k, n - arr[i], arr, list, ans, i + 1);
                list.remove(list.size() - 1);
            }
        }
    }
}
